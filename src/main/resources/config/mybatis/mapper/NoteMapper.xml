<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.product.luffy.mapper.NoteMapper">

    <resultMap id="NoteResultMap" type="com.product.luffy.po.Note">
        <id column="NOTE_ID" property="noteId"/>
        <result column="NOTE_NM" property="noteNm"/>
        <result column="NOTE_STAT_CD" property="noteStatCd"/>
        <result column="SEX" property="sex"/>
        <result column="BIRTH_DT" property="birthDt"/>
        <result column="FILE_ID" property="fileId"/>
        <result column="USER_ID" property="userId"/>
        <result column="REG_USER_ID" property="regUserId"/>
        <result column="REG_DTM" property="regDtm"/>
    </resultMap>

    <resultMap id="UserResultMap" type="com.product.luffy.po.User">
        <result column="USER_ID" property="userId"/>
        <result column="USER_LOGIN_ID" property="userLoginId"/>
        <result column="USER_PWD" property="userPwd"/>
        <result column="USER_NM" property="userNm"/>
        <result column="USER_ROLE" property="userRole"/>
        <result column="FILE_ID" property="fileId"/>
        <result column="REG_DTM" property="regDtm"/>
    </resultMap>

    <select id="selectUserNote" parameterType="String" resultMap="NoteResultMap">
        SELECT USER_ID,
                NOTE_ID
          FROM USER_NOTE_R
         WHERE NOTE_ID = #{noteId}
           AND USER_ID = #{userId}
    </select>

    <select id="selectNoteListByUserId" parameterType="map" resultMap="NoteResultMap">
        SELECT
            N.NOTE_ID,
            N.NOTE_NM,
            N.FILE_ID,
            N.REG_USER_ID,
            N.REG_DTM
        FROM NOTE_F N
            INNER JOIN
            USER_NOTE_R R
                ON (N.NOTE_ID = R.NOTE_ID AND R.USER_ID = #{userId})
        WHERE N.NOTE_STAT_CD = '001'

    </select>

    <select id="selectMyNoteListByUserId" parameterType="map" resultMap="NoteResultMap">
        SELECT
            N.NOTE_ID,
            N.NOTE_NM,
            N.REG_USER_ID,
            N.REG_DTM,
            N.FILE_ID
        FROM NOTE_F N
        WHERE N.NOTE_STAT_CD = '001'
              AND N.REG_USER_ID = #{userId}
        ORDER BY N.REG_DTM DESC
    </select>

    <insert id="insertNote" parameterType="map">
        INSERT INTO NOTE_F (NOTE_ID,
                            NOTE_NM,
                            NOTE_STAT_CD,
                            SEX,
                            BIRTH_DT,
                            FILE_ID,
                            REG_USER_ID,
                            REG_DTM)
        VALUES (#{noteId},
                #{noteNm},
                '001',
                #{sex},
                #{birthDt},
                #{fileId},
                #{regUserId},
                NOW())
    </insert>

    <insert id="insertUserNote" parameterType="map">
        INSERT INTO USER_NOTE_R (USER_ID,
                                 NOTE_ID,
                                 REG_USER_ID,
                                 REG_DTM)
        VALUES (#{userId},
                #{noteId},
                #{userId},
                NOW())
    </insert>

    <update id="updateNote">
        UPDATE NOTE_F
        <trim prefix="SET" suffixOverrides=",">
            <if test="noteNm != null">NOTE_NM = #{noteNm},</if>
            <if test="sex != null">SEX = #{sex},</if>
            <if test="birthDt != null">BIRTH_DT = #{birthDt},</if>
            <if test="fileId != null">FILE_ID = #{fileId},</if>
        </trim>
        WHERE NOTE_ID = #{noteId}
    </update>

    <update id="deleteNote">
        UPDATE NOTE_F
        SET NOTE_STAT_CD = '002'
        WHERE NOTE_ID = #{noteId}
    </update>

    <select id="selectNote" parameterType="String" resultMap="NoteResultMap">
        SELECT
            N.NOTE_ID,
            N.NOTE_NM,
            N.NOTE_STAT_CD,
            N.SEX,
            N.BIRTH_DT,
            N.REG_USER_ID,
            N.REG_DTM,
            N.FILE_ID
        FROM NOTE_F N
            INNER JOIN USER_NOTE_R UN
            ON (N.NOTE_ID = UN.NOTE_ID AND UN.USER_ID = #{userId})
        WHERE N.NOTE_ID = #{noteId}
    </select>

    <select id="selectShareUserList" parameterType="String" resultMap="UserResultMap">
        SELECT
            U.USER_ID,
            U.USER_LOGIN_ID,
            U.EMAIL,
            U.USER_NM,
            U.FILE_ID
        FROM USER_NOTE_R UN
            INNER JOIN USER_F U ON (UN.USER_ID = U.USER_ID)
        WHERE UN.NOTE_ID = #{noteId}
              AND UN.USER_ID != #{userId}
    </select>

    <insert id="insertShareUserList" parameterType="Map">
        INSERT INTO USER_NOTE_R (USER_ID,
                                 NOTE_ID,
                                 REG_USER_ID,
                                 REG_DTM)
            VALUE
            <foreach collection="userIdList" item="item" separator=",">
                (#{item.userId},
                #{noteId},
                #{regUserId},
                NOW())
            </foreach>
    </insert>

    <insert id="insertShareUser" parameterType="Map">
        INSERT INTO USER_NOTE_R (USER_ID,
        NOTE_ID,
        REG_USER_ID,
        REG_DTM)
        VALUE (#{userId},
        #{noteId},
        #{regUserId},
        NOW())
    </insert>
    <delete id="deleteShareUser" parameterType="Map">
        DELETE FROM USER_NOTE_R
        WHERE USER_ID = #{userId}
              AND NOTE_ID = #{noteId}
    </delete>

    <select id="selectShareNoteList" parameterType="String" resultMap="NoteResultMap">
        SELECT
            N.NOTE_ID,
            N.NOTE_NM,
            N.NOTE_STAT_CD,
            N.SEX,
            N.BIRTH_DT,
            N.FILE_ID
        FROM USER_NOTE_R UN
            INNER JOIN NOTE_F N
                ON (UN.NOTE_ID = N.NOTE_ID AND N.REG_USER_ID != #{userId} AND N.NOTE_STAT_CD = 001)
        WHERE USER_ID = #{userId}
    </select>
</mapper>
